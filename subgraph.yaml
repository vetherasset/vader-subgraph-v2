specVersion: 0.0.2
schema:
  file: ./schema.graphql
dataSources:
  # This approach uses a particular event emitted once very early to trigger token registry
  # initialization. It is not so important what the event is but rather that it was emitted before
  # any other event of an ERC20 token. We even don't know what contract it is. Besides that, the ABI
  # file for that contract was inferred since no contract information or source code is available
  # out there.

  # ======================== Vader ========================
  - kind: ethereum/contract
    name: Vader
    network: kovan
    source:
      address: "0xE8bD273f54a990007b1069a15b66B584abc86e04"
      abi: Vader
      startBlock: 27956678
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Global
        - Token
        - Account
        - Allowance
        - Transaction
        - ApprovalEvent
      abis:
        - name: Vader
          file: ./abis/Vader.json
      eventHandlers:
        - event: Approval(indexed address,indexed address,uint256)
          handler: handleApprovalEvent
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransferEvent
        - event: Emission(uint256,uint256)
          handler: handleEmissionEvent
        - event: EmissionChanged(uint256,uint256)
          handler: handleEmissionChangedEvent
        - event: GrantClaimed(indexed address,uint256)
          handler: handleGrantClaimedEvent
        - event: MaxSupplyChanged(uint256,uint256)
          handler: handleMaxSupplyChangedEvent
        - event: ProtocolInitialized(address,address,address,address)
          handler: handleProtocolInitializedEvent
      file: ./src/mappings/vader.ts

  # ======================== USDV =========================
  - kind: ethereum/contract
    name: USDV
    network: kovan
    source:
      address: "0xE90E0A75694Fc97576868243AD0364d10291f48A"
      abi: USDV
      startBlock: 27959344
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Global
        - Token
        - Account
        - Allowance
        - Transaction
        - ApprovalEvent
      abis:
        - name: USDV
          file: ./abis/USDV.json
      eventHandlers:
        - event: Approval(indexed address,indexed address,uint256)
          handler: handleApprovalEvent
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransferEvent
      file: ./src/mappings/usdv.ts

  # ====================== Converter ======================
  - kind: ethereum/contract
    name: Converter
    network: kovan
    source:
      address: "0xF79c9406c14AF5Aa8b3F1E5E538A026aDf4D0ff5"
      abi: Converter
      startBlock: 27956747
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Global
        - Token
        - Account
        - Allowance
        - Transaction
        - ApprovalEvent
      abis:
        - name: Converter
          file: ./abis/Converter.json
      eventHandlers:
        - event: Conversion(indexed address,uint256,uint256)
          handler: handleConversionEvent
      file: ./src/mappings/converter.ts

  # ==================== VaderReserve =====================
  - kind: ethereum/contract
    name: VaderReserve
    network: kovan
    source:
      address: "0x176207eD5Ae8c41F766E8C31112c7cDdE5Fb32AA"
      abi: VaderReserve
      startBlock: 27959289
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Global
        - Token
        - Account
        - Allowance
        - Transaction
        - ApprovalEvent
      abis:
        - name: VaderReserve
          file: ./abis/VaderReserve.json
      eventHandlers:
        - event: GrantDistributed(address,uint256)
          handler: handleGrantDistributedEvent
        - event: LossCovered(address,uint256)
          handler: handleLossCoveredEvent
      file: ./src/mappings/vaderReserve.ts

  # ===================== VaderPoolV2 ======================
  - kind: ethereum/contract
    name: VaderPoolV2
    network: kovan
    source:
      address: "0x795bE6b0BF54AF587385604B9DB869E797db69E0"
      abi: VaderPoolV2
      startBlock: 27959008
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Pair
        - Token
      abis:
        - name: VaderPoolV2
          file: ./abis/VaderPoolV2.json
      eventHandlers:
        - event: Burn(indexed address,uint256,uint256,indexed address)
          handler: handleBurnEvent
        - event: Mint(indexed address,indexed address,uint256,uint256)
          handler: handleMintEvent
        - event: PositionOpened(indexed address,indexed address,uint256,uint256)
          handler: handlePositionOpenedEvent
        - event: PositionClosed(indexed address,uint256,uint256,uint256)
          handler: handlePositionClosedEvent
        - event: QueueActive(bool)
          handler: handleQueueActiveEvent
        - event: Swap(address,indexed address,uint256,uint256,uint256,uint256,indexed address)
          handler: handleSwapEvent
        - event: Sync(address,uint256,uint256)
          handler: handleSyncEvent
      callHandlers:
        - function: burn(uint256,address)
          handler: handleBurn
        - function: mint(address,uint256,uint256,address,address)
          handler: handleMint
        - function: setTokenSupport(address,bool)
          handler: handleSetTokenSupport
      file: ./src/mappings/vaderPoolV2.ts

  # ==================== LinearVesting ====================
  - kind: ethereum/contract
    name: LinearVesting
    network: kovan
    source:
      address: "0xEa66FB7590147A5C901E14034f243e1cF8f958ff"
      abi: LinearVesting
      startBlock: 27956766
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Global
        - Token
        - Account
        - Allowance
        - Transaction
        - ApprovalEvent
      abis:
        - name: LinearVesting
          file: ./abis/LinearVesting.json
      eventHandlers:
        - event: Vested(indexed address,uint256)
          handler: handleVestedEvent
        - event: VestingInitialized(uint256)
          handler: handleVestingInitializedEvent
      file: ./src/mappings/linearVesting.ts

  # ==================== GovernorAlpha ====================
  - kind: ethereum/contract
    name: GovernorAlpha
    network: kovan
    source:
      address: "0x34e9Db9bC8c668E2fa922c1d22913DCd587607D8"
      abi: GovernorAlpha
      startBlock: 27959549
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Global
        - Token
        - Account
        - Allowance
        - Transaction
        - ApprovalEvent
      abis:
        - name: GovernorAlpha
          file: ./abis/GovernorAlpha.json
      eventHandlers:
        - event: CouncilChanged(address,address)
          handler: handleCouncilChangedEvent
        - event: FeeReceiverChanged(address,address)
          handler: handleFeeReceiverChangedEvent
        - event: FeeAmountChanged(uint256,uint256)
          handler: handleFeeAmountChangedEvent
        - event: ProposalCreated(uint256,address,address[],uint256[],string[],bytes[],uint256,uint256,string)
          handler: handleProposalCreatedEvent
        - event: ProposalCanceled(uint256)
          handler: handleProposalCanceledEvent
        - event: ProposalQueued(uint256,uint256)
          handler: handleProposalQueuedEvent
        - event: ProposalExecuted(uint256)
          handler: handleProposalExecutedEvent
        - event: ProposalVetoed(uint256,bool)
          handler: handleProposalVetoedEvent
        - event: VoteCast(address,uint256,bool,uint256)
          handler: handleVoteCastEvent
      file: ./src/mappings/governorAlpha.ts

    # ====================== Timelock =======================
  - kind: ethereum/contract
    name: Timelock
    network: kovan
    source:
      address: "0x7574D631E9b402917cC478ac568b465D7F726033"
      abi: Timelock
      startBlock: 27959607
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Global
        - Token
        - Account
        - Allowance
        - Transaction
        - ApprovalEvent
      abis:
        - name: Timelock
          file: ./abis/Timelock.json
      eventHandlers:
        - event: NewAdmin(indexed address)
          handler: handleNewAdminEvent
        - event: NewPendingAdmin(indexed address)
          handler: handleNewPendingAdminEvent
        - event: NewDelay(indexed uint256)
          handler: handleNewDelayEvent
        - event: CancelTransaction(indexed bytes32,indexed address,uint256,string,bytes,uint256)
          handler: handleCancelTransactionEvent
        - event: ExecuteTransaction(indexed bytes32,indexed address,uint256,string,bytes,uint256)
          handler: handleExecuteTransactionEvent
        - event: QueueTransaction(indexed bytes32,indexed address,uint256,string,bytes,uint256)
          handler: handleQueueTransactionEvent
      file: ./src/mappings/timelock.ts
